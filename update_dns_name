import yaml
import pynetbox

# Connect to NetBox
netbox_url = input("NetBox URL: ").strip()
netbox_token = input("NetBox API Token: ").strip()
yaml_file = input("YAML file with servers: ").strip()

nb = pynetbox.api(netbox_url, token=netbox_token)

# Load YAML
with open(yaml_file, "r") as f:
    data = yaml.safe_load(f)

servers = data.get("servers", [])
if not servers:
    print("No 'servers' list found.")
    exit(1)

# Process each server
for server in servers:
    name = server.get("name")
    if not name:
        continue

    device = nb.dcim.devices.get(name=name)
    if not device:
        print(f"Device not found: {name}")
        continue

    iface = nb.dcim.interfaces.get(device_id=device.id, name="bond0")
    if not iface:
        print(f"bond0 not found on {name}")
        continue

    ip_list = nb.ipam.ip_addresses.filter(device_id=device.id)
    ip_obj = None

    for ip in ip_list:
        if (
            ip.assigned_object_type == "dcim.interface"
            and ip.assigned_object_id == iface.id
            and ip.family.label == "IPv4"
        ):
            ip_obj = ip
            break

    if not ip_obj:
        print(f"No IPv4 found on bond0 of {name}")
        continue

    updated = ip_obj.update({
        "dns_name": name,
        "description": f"bond0 of {name}"
    })

    if updated:
        print(f"Updated IP {ip_obj.address} with DNS name and description")
    else:
        print(f"Failed to update IP {ip_obj.address}")
